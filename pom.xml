<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>moremaven</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>web</module>
        <module>dao</module>
        <module>domain</module>
        <module>service</module>
        <module>serviceapi</module>
    </modules>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
        <relativePath />
    </parent>

    <properties>
        <project.bulid.sourceEncoding>UTF-8</project.bulid.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

    </properties>


    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.1.10</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>2.0.3</version>
        </dependency>


        <!--TODO 通常将spring cache + redis 进行整合， 可以方便的缓存对象，用来缓存的内存的是使用redis内存，不会消耗JVM内存，提升了性能
            （当然也可以使用其他缓存服务器，只要实现了Spring的Cache类，并且配置到XML就可以）-->
        <!--redis  作为一个缓存服务器，是内存级别的缓存，使用单纯的内存进行缓存
            优点： 1） 性能极高。读取速度 110000次/s， 写的速度是 81000次/s
                   2） 支持的数据类型丰富，Redis 支持二进制的
        -->
        <!--TODO 注意：1.5版本的依赖和2.0的依赖不一样，1.5的依赖中没有 "data"， 2.0中是有 "data" -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <exclusions>
                <!-- 1.5版本的浏览器默认采用连接池是jedis， 2.0 以上使用lettuce，在这里采用jedis，所以需要排除lettuce的jar-->
                <exclusion>
                    <groupId>redis.clients</groupId>
                    <artifactId>jedis</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.lettuce</groupId>
                    <artifactId>lettuce-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--添加jedis 客户端-->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
        </dependency>
        <!--spring cache 是代码级别的缓存，一般是使用一个ConcurrentMap,也就是使用JVM的内存进行缓存对象的
          TODO  Cache 只适合单机环境， 现在可以直接是用redis进行缓存
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <!--必须加上， jedis依赖此依赖-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.5.0</version>
        </dependency>




        <!--aop-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-aop</artifactId>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.2.5</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <!--Spring Boot开发者工具 (当应用程序以完整打包好的JAR或WAR文件形式运行时，
            开发者工具会被禁用，所以没有必要在构建生产部署包前移除这个依赖。)
             自动重启：当Classpath里的文件发生变化时，自动重启运行中的应用程序 LiveReload支持：对资源的修改自动触发浏览器刷新。
            LiveReload server 用于监控 Spring Boot 应用文件变化，
             远程开发：远程部署时支持自动重启和LiveReload。
             默认的开发时属性值：为一些属性提供有意义的默认开发时属性值。
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>


        <!--模板-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!--&lt;!&ndash;整合Beetl&ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>com.ibeetl</groupId>-->
        <!--<artifactId>beetl-framework-starter</artifactId>-->
        <!--<version>1.1.5.RELEASE</version>-->
        <!--</dependency>-->


        <!--在使用Redis中，可以当做是给其序列化器， -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.47</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.webjars.npm/lodash._keyprefix -->
        <dependency>
            <groupId>org.webjars.npm</groupId>
            <artifactId>lodash._keyprefix</artifactId>
            <version>2.0.0</version>
        </dependency>



        <!--security 安全框架-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-security</artifactId>-->
        <!--</dependency>-->


        <!-- 加入 Swagger ui 依賴-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>


        <!--shiro 认证-->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>1.4.0</version>
        </dependency>


        <!--springboot 对 amqp 的支持-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>





    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.9.RELEASE</version>
                <configuration>
                    <!--指定该Main Class 为全局的唯一入口-->
                    <mainClass>com.example.ExampleApplication</mainClass>
                    <layout>ZIP</layout>
                </configuration>

               <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--&lt;!&ndash;可以把依赖的包都打包到生成的Jar包中&ndash;&gt;-->
                            <!--<goal>repackage</goal>-->
                        <!--</goals>-->
                        <!--&lt;!&ndash;可以生成不含依赖包的不可执行Jar包&ndash;&gt;-->
                        <!--<configuration>-->
                            <!--&lt;!&ndash;<classifier>exec</classifier>&ndash;&gt;-->
                            <!--&lt;!&ndash;fork 如果没有改配置则devtools 不起作用， 即应用不会restart&ndash;&gt;-->
                            <!--&lt;!&ndash;<fork>true</fork>&ndash;&gt;-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            </plugin>

            <!--要打包了这个生成代码要禁止掉，本地开发开启-->
            <plugin>
                <!--Mybatis-generator插件,用于自动生成Mapper和POJO-->
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <!--# 1.3.6就报错了-->
                <version>1.3.5</version>
                <configuration>
                    <!--允许移动生成的文件 -->
                    <verbose>true</verbose>
                    <!-- 是否覆盖 -->
                    <overwrite>true</overwrite>
                    <!-- 自动生成的配置 -->
                    <configurationFile>${basedir}/src/main/resources/mybatis-generator.xml</configurationFile>
                </configuration>
                <executions>
                    <execution>
                        <id>Generate MyBatis Artifacts</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.mybatis.generator</groupId>
                        <artifactId>mybatis-generator-core</artifactId>
                        <version>1.3.5</version>
                    </dependency>
                    <!-- https://mvnrepository.com/artifact/tk.mybatis/mapper -->
                    <dependency>
                        <groupId>tk.mybatis</groupId>
                        <artifactId>mapper</artifactId>
                        <version>4.0.3</version>
                    </dependency>
                    <!--数据库mysql驱动不要使用太高的版本-->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.39</version>
                    </dependency>

                    <!--lombok-->
                    <!--<dependency>-->
                    <!--<groupId>com.chrm</groupId>-->
                    <!--<artifactId>mybatis-generator-lombok-plugin</artifactId>-->
                    <!--<version>1.0-SNAPSHOT</version>-->
                    <!--</dependency>-->

                </dependencies>
            </plugin>


        </plugins>
    </build>


</project>